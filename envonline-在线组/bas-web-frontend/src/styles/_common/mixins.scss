/* 背景渐变
[start-color：起始颜色; end-color：结束颜色]
-------------------------- */
@mixin bg-linear($start-color:#fcfcfc, $end-color: #f1f1f1) {
  background: -webkit-gradient(linear, left top, left bottom, from($start-color), to($end-color));
  background: -moz-linear-gradient(top, $start-color, $end-color);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$start-color}', endColorstr='#{$end-color}');
  background: -o-linear-gradient(top, $start-color, $end-color);
  background: -ms-linear-gradient(top, $start-color, $end-color);
  background: linear-gradient(to bottom, $start-color, $end-color);
}



/* 扩大可点击区域
[x: X轴扩展大小; y: Y轴扩展大小]
-------------------------- */
@mixin click-extend($x: 10px, $y: $x) {
  position: relative;
  &::before {
    content: '';
    position: absolute;
    top: -$y;
    right: -$x;
    bottom: -$y;
    left: -$x;
  }
}


/* 登录布局响应式
[x: X轴扩展大小; y: Y轴扩展大小]
-------------------------- */
@mixin container() {
  display: block;
  margin: 0 auto;
  width: 748px;
  padding: 0 15px;
  @media screen and (min-width: 960px) {
    width: 900px;
  }
  @media screen and (min-width: 1200px) {
    width: 1200px;
  }
}



/* 阴影
[x: 水平偏移量; y: 垂直偏移量; blur: 偏移距离; color: 阴影颜色]
-------------------------- */
@mixin shadow($x: 0, $y: $x, $blur: 0, $color: #dcdee2) {
  $args: $x $y $blur $color;
  box-shadow: $args;
  -moz-box-shadow: $args;
  -webkit-box-shadow: $args;
}



/* 轮廓
[style: 内框样式; space: 间距,负数内缩]
-------------------------- */
@mixin outline($style: 1px solid #dcdee2, $space: -10px) {
  outline: $style;
  outline-offset: $space;
}



/* 旋转
[angle: 角度, 0~360]
-------------------------- */
@mixin rotate($angle: 30deg) {
  transform: rotate($angle);
  -webkit-transform: rotate($angle);
  -moz-transform: rotate($angle);
  -o-transform: rotate($angle);
}



/* 菱形旋转
[x: 水平缩放比; y:垂直缩放比]
-------------------------- */
@mixin skew($x: 30deg, $y: $x) {
  transform: skew($x, $y);
  -webkit-transform: skew($x, $y);
  -moz-transform: skew($x, $y);
  -o-transform: skew($x, $y);
  -ms-transform: skew($x, $y);
}



/* 缩放
[x: 水平缩放比; y:垂直缩放比]
-------------------------- */
@mixin scale($x: 1.2, $y: $x) {
  transform: scale($x, $y);
  -webkit-transform: scale($x, $y);
  -moz-transform: scale($x, $y);
  -o-transform: scale($x, $y);
  -ms-transform: scale($x, $y);
}



/* 偏移
[x: 水平偏移量; y:垂直偏移量]
-------------------------- */
@mixin translate($x: 10px, $y: $x){
  transform: translate($x, $y);
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
}



/* 超出指定行溢出隐藏
[row: 指定行数; line: 指定行高]
-------------------------- */
@mixin lines-omit($row: 2) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $row;
  overflow: hidden;
}



/* 隐藏滚动条但保留滚动效果
-------------------------- */
@mixin scrollbar-y {
  max-height: 100%;
  margin-right: -7px;
  overflow-x: hidden;
  overflow-y: auto;
  &::-webkit-scrollbar,
  &::-webkit-scrollbar-track-piece {
    width: 0 !important;
  }
}



/* 侧栏导航嵌套样式定义
-------------------------- */

// 菜单颜色样式
@mixin _menu-color ($hover, $active, $opened) {
  &.el-menu-item {
    &:hover { color: $hover; }
    &.is-active { color: $active; }
  }
  &.el-submenu {
    &:hover > .el-submenu__title { color: $hover; }
    &.is-active > .el-submenu__title { color: $active; }
    &.is-opened > .el-submenu__title { color: $opened; }
    &.is-active.is-opened > .el-submenu__title { color: $active; }
  }
}

// 菜单背景样式
@mixin _menu-bg ($hover, $active, $opened) {
  &.el-menu-item {
    &:hover { background-color: $hover; }
    &.is-active { background-color: $active; }
  }
  &.el-submenu {
    &:hover > .el-submenu__title { background-color: $hover; }
    &.is-active > .el-submenu__title { background-color: $active; }
    &.is-opened > .el-submenu__title { background-color: $opened; }
    &.is-active.is-opened > .el-submenu__title { background-color: $active; }
  }
}

// 模式参数解构
@mixin menu-args ($hover, $active, $opened, $depth, $mode, $mixin) {
  // 方案一（默认）
  @if $mode == 1 {
    // 限制层级
    @if $depth == 1 { > li {
      @if $mixin == 1 { @include _menu-color($hover, $active, $opened); }
      @if $mixin == 2 { @include _menu-bg($hover, $active, $opened); }
    } }
    // 不限制层级
    @else { li {
      @if $mixin == 1 { @include _menu-color($hover, $active, $opened); }
      @if $mixin == 2 { @include _menu-bg($hover, $active, $opened); }
    } }
  }
  // 方案二（备用）
  @if $mode == 2 {
    // 限制层级
    @if $depth == 1 { > li {
      @if $mixin == 1 { @include _menu-color; }
      @if $mixin == 2 { @include _menu-bg; }
    } }
    // 不限制层级
    @else { li {
      @if $mixin == 1 { @include _menu-color; }
      @if $mixin == 2 { @include _menu-bg; }
    } }
  }
}

// 混合解构
@mixin menu-color( $hover, $active, $opened: $active, $depth: 1, $mode: $g-side-mode, $mixin: 1 ) {
  @include menu-args($hover, $active, $opened, $depth, $mode, $mixin);
}
@mixin menu-bg( $hover, $active, $opened: $active, $depth: 1, $mode: $g-side-mode, $mixin: 2 ) {
  @include menu-args($hover, $active, $opened, $depth, $mode, $mixin);
}


// 子菜单缩进
@mixin submenu-indent($n) {
  > .el-menu-item,
  > .el-submenu > .el-submenu__title {
    padding-left: $g-side-item-indent * $n !important;
  }
};

// 子菜单图标
@mixin submenu-icon {
  display: inline-block;
  width: 20px;
  font-size: 14px;
  text-align: center;
  color: inherit;
  + span { margin-left: $g-side-icon-space; }
}

// 节点字体颜色
@mixin submenu-color($hover-color, $active-color, $depth: 0, $body: 0) {
  @if $depth {
    .el-menu-item.is-active { color: $active-color !important; }
    .el-submenu {
      // 方案一(默认)
      @if $g-side-mode == 1 {
        &.is-active > .el-submenu__title { color: $active-color !important; }
        &.is-opened > .el-submenu__title { color: $active-color; }
      }
      // 方案二
      @if $g-side-mode == 2 {
        &.is-opened > .el-submenu__title { color: $active-color; }
        &.is-active.is-opened > .el-submenu__title { color: $active-color !important; }
        @if $body == 1 {
          &.is-active > .el-submenu__title { color: $active-color !important; }
        }
      }
      // 方案三
      @if $g-side-mode == 3 {
        &.is-active > .el-submenu__title { color: $active-color !important; }
        &.is-opened > .el-submenu__title { color: $--color-white !important; }
        &.is-active.is-opened > .el-submenu__title { color: $active-color !important; }        
      }
    }
  } @else {
    > .el-menu-item:hover,
    > .el-submenu__title:hover,
    > .el-menu-item.is-active { color: $active-color !important; }
    > .el-submenu {
      // 方案一(默认)
      @if $g-side-mode == 1 {
        &.is-active > .el-submenu__title,
        &.is-opened > .el-submenu__title { color: $active-color !important; }
      }
      // 方案二
      @if $g-side-mode == 2 {
        &.is-active > .el-submenu__title,
        &.is-opened > .el-submenu__title { color: $active-color !important; }
      }
      // 方案三
      @if $g-side-mode == 3 {
        &.is-active > .el-submenu__title { color: $active-color !important; }
        &.is-opened > .el-submenu__title { color: $--color-white !important; }        
      }
    }
  }
}

// 节点字体背景
@mixin submenu-bg($bg, $depth: 0) {
  @if $depth {
    .el-menu-item, .el-submenu__title { background-color: $bg }
  } @else {
    > .el-menu-item, > .el-submenu__title { background-color: $bg }
  }
}

// state: 0 默认、1 悬浮、2 活动
@mixin submenu-hover-bg($bg) {
  background-color: $bg;
  > li.el-menu-item:hover,
  > li.el-submenu > .el-submenu__title:hover {
    color: $-color-theme;
    background-color: $bg !important;
  }
}


@mixin submenu-active-bg($bg, $body: 0, $mode: $g-side-mode) {
  background-color: $bg;
  > li.el-menu-item.is-active { background-color: $bg !important }
  > li.el-submenu {
    // 方案一(默认)
    @if $mode == 1 {
      &.is-active > .el-submenu__title,
      &.is-opened > .el-submenu__title { background-color: $bg !important; }
    }
    // 方案二
    @if $mode == 2 {
      &.is-opened > .el-submenu__title,
      &.is-active.is-opened > .el-submenu__title { background-color: $bg !important; }
      @if $body == 1 {
        &.is-active > .el-submenu__title { background-color: $bg !important; }
      }
    }
  }
}

// 按钮图标
@mixin btn-icon($color) {
  color: $color;
  i { background: $color; }
}
