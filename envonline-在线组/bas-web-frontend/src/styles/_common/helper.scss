/* 元素盒子间距
-------------------------- */
$space-size: $-base-size;
$spaces: (
  0: 0,
  xs: $space-size * .5,   // 5px
  sm: $space-size,        // 10px
  md: $space-size * 1.5,  // 15px
  lg: $space-size * 2,    // 20px
  xl: $space-size * 3,    // 30px
  xxl: $space-size * 5,   // 50px
);

@each $name, $value in $spaces {
  .mar-a-#{$name} { margin: $value !important }
  .mar-l-#{$name}, .mar-x-#{$name} { margin-left: $value !important }
  .mar-r-#{$name}, .mar-x-#{$name} { margin-right: $value !important }
  .mar-t-#{$name}, .mar-y-#{$name} { margin-top: $value !important }
  .mar-b-#{$name}, .mar-y-#{$name} { margin-bottom: $value !important }
  .pad-a-#{$name} { padding: $value !important }
  .pad-l-#{$name}, .pad-x-#{$name} { padding-left: $value !important }
  .pad-r-#{$name}, .pad-x-#{$name} { padding-right: $value !important }
  .pad-t-#{$name}, .pad-y-#{$name} { padding-top: $value !important }
  .pad-b-#{$name}, .pad-y-#{$name} { padding-bottom: $value !important }
}

// 区块间隔特定间隔定义
$block-space-size: $-block-space;
$block-spaces: (
  xs: $block-space-size * .5,   // 3.5px
  sm: $block-space-size,        // 7px
);

@each $name, $value in $block-spaces {
  .el-col, .el-row {
    &.mar-a-#{$name} { margin: $value !important }
    &.mar-l-#{$name}, &.mar-x-#{$name} { margin-left: $value !important }
    &.mar-r-#{$name}, &.mar-x-#{$name} { margin-right: $value !important }
    &.mar-t-#{$name}, &.mar-y-#{$name} { margin-top: $value !important }
    &.mar-b-#{$name}, &.mar-y-#{$name} { margin-bottom: $value !important }
    &.pad-a-#{$name} { padding: $value !important }
    &.pad-l-#{$name}, &.pad-x-#{$name} { padding-left: $value !important }
    &.pad-r-#{$name}, &.pad-x-#{$name} { padding-right: $value !important }
    &.pad-t-#{$name}, &.pad-y-#{$name} { padding-top: $value !important }
    &.pad-b-#{$name}, &.pad-y-#{$name} { padding-bottom: $value !important }
  }
}


/* animation 动画
-------------------------- */
@mixin animation ($name: shake, $duration: 1s, $count: infinite) {
  animation: $name $duration $count;
  @keyframes shake {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(-45deg); }
    50% { transform: rotate(0deg); }
    75% { transform: rotate(45deg); }
    100% { transform: rotate(0deg); }
  }
  @keyframes fade {
    0% { opacity: 1; }
    25% { opacity: .5; }
    50% { opacity: 0; }
    75% { opacity: .5; }
    100% { opacity: 1; }
  }
  @keyframes zoomIn {
    from {
      opacity: 0;
      -webkit-transform: scale3d(0.3, 0.3, 0.3);
      transform: scale3d(0.3, 0.3, 0.3);
    }
    50% { opacity: 1 }
  }
  @keyframes bounceIn {
    from, 20%, 40%, 60%, 80%, to {animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
    0% {opacity: 0; transform: scale3d(0.3, 0.3, 0.3); }
    20% {transform: scale3d(1.1, 1.1, 1.1); }
    40% {transform: scale3d(0.9, 0.9, 0.9); }
    60% {opacity: 1; transform: scale3d(1.03, 1.03, 1.03); }
    80% {transform: scale3d(0.97, 0.97, 0.97); }
    to {opacity: 1; transform: scale3d(1, 1, 1); }
  }
  @keyframes bounceInDown {
    from, 60%, 75%, 90%, to {animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1); }
    0% {opacity: 0; transform: translate3d(0, -3000px, 0); }
    60% {opacity: 1; transform: translate3d(0, 25px, 0); }
    75% {transform: translate3d(0, -10px, 0); }
    90% {transform: translate3d(0, 5px, 0); }
    to {transform: translate3d(0, 0, 0); }
  }
}

// animation - 摇晃
.shake {
  @include animation($duration:.3s);
}
.shake-hover {
  &:hover{
    @include animation($duration:.3s);
  }
}

// animation - 显隐
.fade {
  @include animation(fade, .8s);
}
.fade-hover {
  &:hover { @include animation(fade, .8s); }
}

// animation - 缩放
.zoomIn {
  @include animation($name:zoomIn, $count:1);
}
.zoomIn-hover {
  &:hover {
    @include animation($name:zoomIn, $count:1);
  }
}

// animation - 回弹
.bounceIn {
  @include animation(bounceIn, .75s, 1);
}
.bounceIn-hover {
  &:hover {
    @include animation(bounceIn, .75s, 1);
  }
}

// animation - 跌落
.bounceInDown {
  @include animation(bounceInDown, .75s, 1);
}
.bounceInDown-hover {
  &:hover {
    @include animation(bounceInDown, .75s, 1);
  }
}




/* 对齐方式
-------------------------- */
.text-center { text-align: center !important }
.text-left { text-align: left !important }
.text-right { text-align: right !important }
.text-justify { text-align: justify !important }
.vertical-top { vertical-align: top !important }
.vertical-middle { vertical-align: middle !important }
.vertical-bottom { vertical-align: bottom !important }

// 代码
.text-code {
  font-family: 'Consolas';
  font-size: 14px;
}

// 文字竖排
.text-vertical {
  margin: 0 auto;
  width: 15px;
  font-size: 15px;
  line-height: 20px;
}


/* 浮动布局
-------------------------- */

.fn-left { float: left }

.fn-right { float: right }

.fn-clear {
  zoom: 1; // for IE6 IE7
  &:after {
    content: " ";
    visibility: hidden;
    display: block;
    height: 0;
    font-size: 0;
    clear: both;
  }
}

// 设置内联, 减少浮动带来的bug
.fn-left, .fn-right { display: inline }

// 阴影
.fn-shadow {
  box-shadow: 0 1px 1px rgba(0,0,0,0.15) !important
}

// 隐藏, 通常用来与 JS 配合
body .fn-hide { display: none }



/* 弹性布局
https://blog.csdn.net/wildye/article/details/80258349
-------------------------- */

.fn-flex { display: flex; };
.flex-1 { flex: 1; }
.flex-2 { flex: 2; }
.flex-3 { flex: 3; }
.flex-4 { flex: 4; }
.flex-5 { flex: 5; }
.flex-6 { flex: 6; }

.flex-x-start { @extend .fn-flex; justify-content: flex-start }       // 水平左对齐
.flex-x-end { @extend .fn-flex; justify-content: flex-end }           // 水平右对齐
.flex-x-center { @extend .fn-flex; justify-content: center }          // 水平居中对齐
.flex-x-between { @extend .fn-flex; justify-content: space-between }  // 水平两端对齐
.flex-x-around { @extend .fn-flex; justify-content: space-around }    // 水平分散对齐

.flex-y-start { @extend .fn-flex; align-items: start }                // 垂直顶部对齐
.flex-y-end { @extend .fn-flex; align-items: end }                    // 垂直底部对齐
.flex-y-center { @extend .fn-flex; align-items: center }              // 垂直居中对齐
.flex-y-baseline { @extend .fn-flex; align-items: baseline }          // 垂直基线对齐
.flex-y-stretch { @extend .fn-flex; align-items: stretch }            // 垂直填充

.flex-ys-start { @extend .fn-flex; align-content: flex-start }        // 多行垂直顶部对齐
.flex-ys-end { @extend .fn-flex; align-content: flex-end }            // 多行垂直底部对齐
.flex-ys-center { @extend .fn-flex; align-content: center }           // 多行垂直居中对齐
.flex-ys-between { @extend .fn-flex; align-content: space-between }   // 多行垂直分散对齐-上下贴边
.flex-ys-around { @extend .fn-flex; align-content: space-around }     // 多行垂直分散对齐-上下空隙
.flex-ys-stretch { @extend .fn-flex; align-content: stretch }         // 多行垂直分散对齐-上贴边



/* 颜色状态
-------------------------- */
.text-primary { color: $--color-primary !important }
.text-success { color: $--color-success !important }
.text-danger { color: $--color-danger !important }
.text-warning { color: $--color-warning !important }
.text-info { color: $--color-info !important }

.bg-primary, .bg-success, .bg-danger, .bg-warning, .bg-info {
  color: $--color-white
}

.bg-primary { background-color: lighten($--color-primary, 5%) !important }
.bg-success { background-color: lighten($--color-success, 5%) !important }
.bg-danger { background-color: lighten($--color-danger, 5%) !important }
.bg-warning { background-color: lighten($--color-warning, 5%) !important }
.bg-info { background-color: lighten($--color-info, 5%) !important }

.border-primary { border-color: $--color-primary !important; }
.border-success { border-color: $--color-success !important; }
.border-danger { border-color: $--color-danger !important; }
.border-warning { border-color: $--color-warning !important; }
.border-info { border-color: $--color-info !important; }

// 简单的渐变
.fn-linear {
  @include bg-linear(#fcfcfc, #f1f1f1);
}

// 浅色的渐变
.fn-linear-light {
  @include bg-linear(#fcfcfc, #f9f9f9);
}



/* 文字处理
-------------------------- */

// 常用字体
.font-16 { font-size: 16px; } // 主标题
.font-15 { font-size: 15px; } // 次级标题
.font-14 { font-size: 14px; } // 正文 | 表格 | 链接文字
.font-13 { font-size: 13px; } // 辅助文字
.font-12 { font-size: 12px; } // 内容 | 失效文字

// 文字加粗
.font-bold { font-weight: bold }

// 单行文字溢出时出现省略号，需设定宽度
.fn-text-overflow {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// 强制不换行
.fn-no-wrap { white-space: nowrap }

// 强制英文单词不换行
.fn-en-wrap { word-break: break-all }

// 自动换行
.fn-aoto-wrap {
  word-wrap: break-word;
  word-break: normal;
}

// chrome 下字体过小的问题
.fn-webkit-adjust {
  -webkit-text-size-adjust: none;
}

// 跳转链接 - 默认下划线
.fn-text-link {
  color: #0ae;
  text-decoration: underline;
}

// 下载链接 - 悬浮显示下划线
.fn-down-link {
  color: #0ae;
  &:hover { text-decoration: underline };
}

// 按钮间隔
.fn-space-x {
  width: 1px;
  margin: 0 10px;
  font-size: 16px;
  color: $--border-color-lighter;
}

// 宽度填充
.fill-w { width: 100% !important; }

// 高度填充
.fill-h { height: 100% !important; }

// 自适应滚动条
.fn-over-y {
  overflow-x: hidden;
  overflow-y: auto;
}

// 禁选文字
.fn-no-select {
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}



/* 鼠标指针形状
-------------------------- */

.z-text { cursor: text !important; }          // 输入光标 I
.z-move { cursor: move !important; }          // 移动
.z-wait { cursor: wait !important; }          // 等待 o
.z-auto { cursor: auto !important; }          // 还原状态
.z-help { cursor: help !important; }          // 箭头 ?
.z-default { cursor: default !important; }    // 默认-指针箭头
.z-pointer { cursor: pointer !important; }    // 手形
.z-resize-x { cursor: e-resize !important; }  // 左右双向箭头
.z-resize-y { cursor: s-resize !important; }  // 上下双向箭头
.z-grab { cursor: grab !important; }          // 伸手
.z-grabbing { cursor: grabbing !important; }  // 握拳

.z-text, .z-move, .z-wait, .z-auto, .z-help, .z-default, .z-pointer {
  > .el-input, input { cursor: inherit !important; }
}

// 扩大点击区域
.z-click-extend { @include click-extend(10px); }
